
#+BEGIN_SRC lisp
  (diagram::cl-apps-main "./tmp.diagram" :utf8 "./tmp.svg" :utf8)
#+END_SRC

* 移植作業
** base [6/6]

  - [X] point.lisp
  - [X] mathutil.lisp
  - [X] canvas.lisp
  - [X] dictionary.lisp
  - [X] layer-manager.lisp
  - [X] svg-writer.lisp

** info 系 [6/6]

  - [X] fill-info.lisp
  - [X] stroke-info.lisp
  - [X] font-info.lisp
  - [X] link-info.lisp
  - [X] label-info.lisp
  - [X] endmark-info.lisp

** entity とその派生 [3/3]

  - [X] entity.lisp
  - [X] entity 派生 [7/7]
    - [X] css.lisp
    - [X] line.lisp [1/1]
      - [X] connector.lisp
    - [X] path.lisp [1/1]
      - [X] arc.lisp
    - [X] polygon.lisp
    - [X] raw-svg.lisp
    - [X] shape.lisp
    - [X] text.lisp
  - [X] shape 派生 [6/6]
    - [X] circle.lisp
    - [X] ellipse.lisp
    - [X] group.lisp
    - [X] image.lisp
    - [X] paragraph.lisp
    - [X] rectangle.lisp

** 未整理 [4/5]

  - [X] CL-SVG.asd -> cl-diagram.asd
  - [X] CL-SVG.lisp -> cl-diagram.lisp
  - [X] constants.lisp
  - [X] create-svg.lisp
  - [ ] svg-main.lisp

* xxx [0/6]
** TODO entity-canvas と shape-canvas : なんか変じゃない？
** TODO add rule( :nonzero|:evenodd ) to fill-info

　essentials(PDF p58) では default が nonzero とされているが、evenodd にみえる。

** TODO stroke-linecap to stroke ( essentials 2nd : p85 )
** TODO css 

　以下のように記述できるようにしたい。

#+BEGIN_SRC lisp
(css
  (style :rect.inner :fill '(:color :red :opacity 0.2)
					 :stroke '(:color :black :width 1))
  (style :.foo :font (make-font :family "foobar")))
#+END_SRC

** TODO endmark

　fill 指定がなければ stroke の color で塗り潰す、ができてない

　default で親 line の stroke color とかを使用、もできていない

** TODO 外部ライブラリ依存の除去 [1/4]
*** TODO jp
*** TODO pathnames
*** DONE strings
*** TODO cl-binary
