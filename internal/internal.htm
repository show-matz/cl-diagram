<html>
<header>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
	<meta http-equiv="Content-Style-Type" content="text/css">
	<title>diagram internal</title>
	<link rel=stylesheet href="./default.css">
</header>
<body>
<!-- define: APPNAME = diagram -->
<!-- define: BLANK_PARAGRAPH = '　　' -->
<!-- define: TODO = '@((background:red;color:white;)(ToDo : %1))' -->
<!-- <!-- config:term-link-in-header -->			
<!-- config:write-comment -->			
<!-- config:header-numbering 2 4 -->			
<h1><a name='kfFuRvOrdfv'></a>diagram internal documents</h1>
<p>　この文書は、 <strong>diagram</strong> の内部設計文書です。</p>
<h2><a name='0qJQvVjc3Xy'></a>1 Table of contents</h2>
<ul>
<li><a href='#0qJQvVjc3Xy'>1 Table of contents</a></li>
<li><a href='#bzrfEUL5NBz'>2 src 配下のコンポーネント</a></li>
<ul>
<li><a href='#5PHdXU1SAwU'>2.1 arc.lisp</a></li>
<li><a href='#jRts0Y6YUfH'>2.2 binutil.lisp</a></li>
<li><a href='#jkshMjTfNSO'>2.3 canvas.lisp</a></li>
<li><a href='#0vu6jIAdrHn'>2.4 circle.lisp</a></li>
<li><a href='#gIF7BnMyKnm'>2.5 cl-diagram.asd</a></li>
<li><a href='#6qK0TBix0mp'>2.6 cl-diagram.lisp</a></li>
<li><a href='#gjxTJAKDoPj'>2.7 connector.lisp</a></li>
<li><a href='#3c2PhHDsO5I'>2.8 constants.lisp</a></li>
<li><a href='#jCwDkKC4S8s'>2.9 create-svg.lisp</a></li>
<li><a href='#kCVvdOT2S7L'>2.10 dictionary.lisp</a></li>
<li><a href='#hd7ThdvzqQq'>2.11 ellipse.lisp</a></li>
<li><a href='#4V2uI4HhR9d'>2.12 endmark-info.lisp</a></li>
<li><a href='#h05k6V1sTsF'>2.13 entity.lisp</a></li>
<li><a href='#au8IebMfeov'>2.14 fill-info.lisp</a></li>
<li><a href='#l9bqLva3rj6'>2.15 font-info.lisp</a></li>
<li><a href='#dxGh4wRHKeg'>2.16 group.lisp</a></li>
<li><a href='#4ukAyTPlA3e'>2.17 image.lisp</a></li>
<li><a href='#hNccIQgX3H4'>2.18 label-info.lisp</a></li>
<li><a href='#g6PVqK0GAdf'>2.19 layer-manager.lisp</a></li>
<li><a href='#7Y5KOwJXVqF'>2.20 line.lisp</a></li>
<li><a href='#k0U5yutENit'>2.21 link-info.lisp</a></li>
<li><a href='#0uaBbu9jd7a'>2.22 mathutil.lisp</a></li>
<li><a href='#bFs5bJqLCfb'>2.23 paragraph.lisp</a></li>
<li><a href='#9k30aVu2Utl'>2.24 path.lisp</a></li>
<li><a href='#kEmV3k1rXYD'>2.25 pathutil.lisp</a></li>
<li><a href='#g7U0GGx7sCV'>2.26 point.lisp</a></li>
<ul>
<li><a href='#cV08aR4hVCU'>2.26.1 make-point 関数</a></li>
<li><a href='#i9EtqjnJKkh'>2.26.2 copy-point 関数</a></li>
<li><a href='#eYsB94h8ozm'>2.26.3 point-p 関数</a></li>
<li><a href='#k76Q8kszUmj'>2.26.4 point-absolute-p 関数</a></li>
<li><a href='#8ARSCNEXCwM'>2.26.5 point-relative-p 関数</a></li>
<li><a href='#et6gePtgg50'>2.26.6 point-x 関数</a></li>
<li><a href='#3B2wOhg6fxU'>2.26.7 point-y 関数</a></li>
<li><a href='#fCZ08hHsf3N'>2.26.8 point+ 関数</a></li>
<li><a href='#6mwEJ7qyOKN'>2.26.9 point- 関数</a></li>
<li><a href='#lEZ6oy96fUH'>2.26.10 point/x+ 関数</a></li>
<li><a href='#awgH1J8YsIC'>2.26.11 point/y+ 関数</a></li>
<li><a href='#3nSG8ftc6m8'>2.26.12 point/xy+ 関数</a></li>
<li><a href='#1cQLTt5yCRi'>2.26.13 point-distance 関数</a></li>
<li><a href='#ekClPzGH4mL'>2.26.14 with-point マクロ</a></li>
</ul>
<li><a href='#ggdkX0SpYat'>2.27 polygon.lisp</a></li>
<li><a href='#g7IEYVlAFRK'>2.28 raw-svg.lisp</a></li>
<li><a href='#c1IDRaD20g3'>2.29 rectangle.lisp</a></li>
<li><a href='#jzen8zyw08N'>2.30 shape.lisp</a></li>
<li><a href='#0ACA2jPppKO'>2.31 stencil.lisp</a></li>
<li><a href='#5S5mEI6PrDL'>2.32 stroke-info.lisp</a></li>
<li><a href='#b75JrIWLwQA'>2.33 stylesheet.lisp</a></li>
<li><a href='#kNkTqs2VjiA'>2.34 text-shape.lisp</a></li>
<li><a href='#e2wwJD0JZFB'>2.35 text.lisp</a></li>
<li><a href='#7NkNOcI9zDh'>2.36 writer.lisp</a></li>
</ul>
</ul>
<p>　　</p>
<h2><a name='bzrfEUL5NBz'></a>2 src 配下のコンポーネント</h2>
<h3><a name='5PHdXU1SAwU'></a>2.1 arc.lisp</h3>
<h3><a name='jRts0Y6YUfH'></a>2.2 binutil.lisp</h3>
<h3><a name='jkshMjTfNSO'></a>2.3 canvas.lisp</h3>
<div align='center'>
<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="89px" preserveAspectRatio="none" style="width:400px;height:89px;background:#FFFFFF;" version="1.1" viewBox="0 0 400 89" width="400px" zoomAndPan="magnify"><defs/><g><!--MD5=[ca373a23aab57fe1695e53d66d08a46e]
entity canvas--><g id="elem_canvas"><rect fill="#F1F1F1" height="44" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="112" x="7" y="39.9266"/><rect fill="#F1F1F1" height="10" style="stroke:#181818;stroke-width:0.5;" width="15" x="99" y="44.9266"/><rect fill="#F1F1F1" height="2" style="stroke:#181818;stroke-width:0.5;" width="4" x="97" y="46.9266"/><rect fill="#F1F1F1" height="2" style="stroke:#181818;stroke-width:0.5;" width="4" x="97" y="50.9266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="22" y="72.245">canvas.lisp</text></g><!--MD5=[b91128fba1eeb5a8a0752a25032da01d]
entity point--><g id="elem_point"><rect fill="#F1F1F1" height="44" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="101" x="293.5" y="39.9266"/><rect fill="#F1F1F1" height="10" style="stroke:#181818;stroke-width:0.5;" width="15" x="374.5" y="44.9266"/><rect fill="#F1F1F1" height="2" style="stroke:#181818;stroke-width:0.5;" width="4" x="372.5" y="46.9266"/><rect fill="#F1F1F1" height="2" style="stroke:#181818;stroke-width:0.5;" width="4" x="372.5" y="50.9266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="61" x="308.5" y="72.245">point.lisp</text></g><!--MD5=[de4df4aeba74b1aec503ebd5674e218a]
entity diagram--><g id="elem_diagram"><rect fill="#F1F1F1" height="44" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="138" x="137" y="39.9266"/><rect fill="#F1F1F1" height="10" style="stroke:#181818;stroke-width:0.5;" width="15" x="255" y="44.9266"/><rect fill="#F1F1F1" height="2" style="stroke:#181818;stroke-width:0.5;" width="4" x="253" y="46.9266"/><rect fill="#F1F1F1" height="2" style="stroke:#181818;stroke-width:0.5;" width="4" x="253" y="50.9266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="152" y="72.245">cl-diagram.lisp</text></g><path d="M119.1387,61.9266 C125.0199,61.9266 130.9011,61.9266 136.7824,61.9266 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="136.7824,61.9266,127.7824,57.9266,131.7824,61.9266,127.7824,65.9266,136.7824,61.9266" style="stroke:#181818;stroke-width:1.0;"/><path d="M95.4406,39.8827 C107.8778,32.672 122.5589,25.5798 137,21.9266 C196.4602,6.8847 215.7706,6 275,21.9266 C288.639,25.5941 302.3633,32.6891 313.9397,39.8982 " fill="none" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="313.9397,39.8982,308.4145,31.7452,309.6954,37.2551,304.1855,38.5361,313.9397,39.8982" style="stroke:#181818;stroke-width:1.0;"/><!--MD5=[69296a57cb3c4c027c5bf4fcf7e34b5b]
@startuml
!pragma layout smetana
component canvas.lisp     as canvas
component point.lisp      as point
component "cl-diagram.lisp" as diagram
canvas -> diagram
canvas -> point
@enduml

PlantUML version 1.2022.2(Sun Mar 06 01:30:19 JST 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: ja
Country: JP
--></g></svg></div>

<h3><a name='0vu6jIAdrHn'></a>2.4 circle.lisp</h3>
<h3><a name='gIF7BnMyKnm'></a>2.5 cl-diagram.asd</h3>
<h3><a name='6qK0TBix0mp'></a>2.6 cl-diagram.lisp</h3>
<h3><a name='gjxTJAKDoPj'></a>2.7 connector.lisp</h3>
<h3><a name='3c2PhHDsO5I'></a>2.8 constants.lisp</h3>
<h3><a name='jCwDkKC4S8s'></a>2.9 create-svg.lisp</h3>
<h3><a name='kCVvdOT2S7L'></a>2.10 dictionary.lisp</h3>
<h3><a name='hd7ThdvzqQq'></a>2.11 ellipse.lisp</h3>
<h3><a name='4V2uI4HhR9d'></a>2.12 endmark-info.lisp</h3>
<h3><a name='h05k6V1sTsF'></a>2.13 entity.lisp</h3>
<h3><a name='au8IebMfeov'></a>2.14 fill-info.lisp</h3>
<h3><a name='l9bqLva3rj6'></a>2.15 font-info.lisp</h3>
<h3><a name='dxGh4wRHKeg'></a>2.16 group.lisp</h3>
<h3><a name='4ukAyTPlA3e'></a>2.17 image.lisp</h3>
<h3><a name='hNccIQgX3H4'></a>2.18 label-info.lisp</h3>
<h3><a name='g6PVqK0GAdf'></a>2.19 layer-manager.lisp</h3>
<h3><a name='7Y5KOwJXVqF'></a>2.20 line.lisp</h3>
<h3><a name='k0U5yutENit'></a>2.21 link-info.lisp</h3>
<h3><a name='0uaBbu9jd7a'></a>2.22 mathutil.lisp</h3>
<h3><a name='bFs5bJqLCfb'></a>2.23 paragraph.lisp</h3>
<h3><a name='9k30aVu2Utl'></a>2.24 path.lisp</h3>
<h3><a name='kEmV3k1rXYD'></a>2.25 pathutil.lisp</h3>
<h3><a name='g7U0GGx7sCV'></a>2.26 point.lisp</h3>
<p>　diagram の座標は point を使って表現します。これは基本的に 2 要素の数値のリストで、通常は <a class='autolink' href='#cV08aR4hVCU'>make-point 関数</a>で作成します。</p>
<pre class='code'>
 (make-point 1 2) <span class='comment'>; =&gt; (1 2)</span>
</pre>
<p>　実際には、座標には <strong>絶対座標</strong> と <strong>相対座標</strong> があり、それを指定するための <code>&amp;optional</code> パラメータが存在します。</p>
<pre class='code'>
 (make-point 1 2 <span class='keyword3'>:absolute</span>) <span class='comment'>; =&gt; (1 2 . :absolute)</span>
</pre>
<h4><a name='cV08aR4hVCU'></a>2.26.1 make-point 関数</h4>
<p>　<code>point</code> を作成するには、x, y を指定して <code>make-point</code> 関数をコールします。オプションで <code>:abosolute</code> か <code>:relative</code> を指定できます。省略した場合は <code>:relative</code> になります。これらは絶対座標か相対座標の区別です。</p>
<pre class='code'>
(<span class='keyword1'>defun</span> <span class='keyword5'>make-point</span> (x y <span class='keyword2'>&amp;optional</span> type) ... )
</pre>
<h4><a name='i9EtqjnJKkh'></a>2.26.2 copy-point 関数</h4>
<p>　<code>point</code> を複製するには <code>copy-point</code> 関数を使ってください。</p>
<pre class='code'>
(<span class='keyword1'>defun</span> <span class='keyword5'>copy-point</span> (pt) ... )
</pre>
<h4><a name='eYsB94h8ozm'></a>2.26.3 point-p 関数</h4>
<pre class='code'>
(<span class='keyword1'>defun</span> <span class='keyword5'>point-p</span> (pt) ... )
</pre>
<h4><a name='k76Q8kszUmj'></a>2.26.4 point-absolute-p 関数</h4>
<pre class='code'>
(<span class='keyword1'>defun</span> <span class='keyword5'>point-absolute-p</span> (pt) ... )
</pre>
<h4><a name='8ARSCNEXCwM'></a>2.26.5 point-relative-p 関数</h4>
<pre class='code'>
(<span class='keyword1'>defun</span> <span class='keyword5'>point-relative-p</span> (pt) ... )
</pre>
<h4><a name='et6gePtgg50'></a>2.26.6 point-x 関数</h4>
<pre class='code'>
(<span class='keyword1'>defun</span> <span class='keyword5'>point-x</span> (pt) ... )
(<span class='keyword1'>defun</span> (setf point-x) (val pt) ... )
</pre>
<h4><a name='3B2wOhg6fxU'></a>2.26.7 point-y 関数</h4>
<pre class='code'>
(<span class='keyword1'>defun</span> <span class='keyword5'>point-y</span> (pt) ... )
(<span class='keyword1'>defun</span> (setf point-y) (val pt) ... )
</pre>
<h4><a name='fCZ08hHsf3N'></a>2.26.8 point+ 関数</h4>
<pre class='code'>
(<span class='keyword1'>defun</span> <span class='keyword5'>point+</span> (pt1 pt2) ... )
</pre>
<h4><a name='6mwEJ7qyOKN'></a>2.26.9 point- 関数</h4>
<pre class='code'>
(<span class='keyword1'>defun</span> <span class='keyword5'>point-</span> (pt1 pt2) ... )
</pre>
<h4><a name='lEZ6oy96fUH'></a>2.26.10 point/x+ 関数</h4>
<pre class='code'>
(<span class='keyword1'>defun</span> <span class='keyword5'>point/x+</span> (pt x) ... )
</pre>
<h4><a name='awgH1J8YsIC'></a>2.26.11 point/y+ 関数</h4>
<pre class='code'>
(<span class='keyword1'>defun</span> <span class='keyword5'>point/y+</span> (pt y) ... )
</pre>
<h4><a name='3nSG8ftc6m8'></a>2.26.12 point/xy+ 関数</h4>
<pre class='code'>
(<span class='keyword1'>defun</span> <span class='keyword5'>point/xy+</span> (pt x y) ... )
</pre>
<h4><a name='1cQLTt5yCRi'></a>2.26.13 point-distance 関数</h4>
<p>　2 つの <code>point</code> 間の距離は <code>point-distance</code> 関数で測ることができます。</p>
<pre class='code'>
(<span class='keyword1'>defun</span> <span class='keyword5'>point-distance</span> (pt1 pt2) ... )
</pre>
<h4><a name='ekClPzGH4mL'></a>2.26.14 with-point マクロ</h4>
<p>　<code>point</code> の x, y に <code>symbol-macrolet</code> でアクセスしたければ <code>with-point</code> マクロが使えます。</p>
<pre class='code'>
(<span class='keyword1'>defmacro</span> <span class='keyword5'>with-point</span> ((sym-x sym-y) pt <span class='keyword2'>&amp;rest</span> body) ... )
</pre>
<p>　　</p>
<h3><a name='ggdkX0SpYat'></a>2.27 polygon.lisp</h3>
<h3><a name='g7IEYVlAFRK'></a>2.28 raw-svg.lisp</h3>
<h3><a name='c1IDRaD20g3'></a>2.29 rectangle.lisp</h3>
<h3><a name='jzen8zyw08N'></a>2.30 shape.lisp</h3>
<h3><a name='0ACA2jPppKO'></a>2.31 stencil.lisp</h3>
<h3><a name='5S5mEI6PrDL'></a>2.32 stroke-info.lisp</h3>
<h3><a name='b75JrIWLwQA'></a>2.33 stylesheet.lisp</h3>
<h3><a name='kNkTqs2VjiA'></a>2.34 text-shape.lisp</h3>
<h3><a name='e2wwJD0JZFB'></a>2.35 text.lisp</h3>
<h3><a name='7NkNOcI9zDh'></a>2.36 writer.lisp</h3>
<hr>
</body>
</html>
