(in-package :cl-diagram-user)

(load-stencil :grid)
(load-stencil :uml-package)
(load-stencil :uml-class)

(create-svg (:width 500 :height 400 :desc "Figure 7.1" :encoding :utf8)
	(grid)
	(let ((*default-font* (make-font :family "sans-serif" :size 10)))
	  (text '(250 30) "Figure 7.1. Ways of showing packages on diagrams"
			:align :center :font '(:family "sans-serif" :weight :bold :size 14))
	  (let ((*uml-class-width*  80)
			(*uml-class-height* 40))
		(uml-package '(90 120) :util :width 130 :height 100 :id :util1)
		(uml-package (point/x+ util1.center 160) :util :width 130 :height 100 :id :util2
					 :contents ((text '(10 20) "Date" :align :left)))
		(text (point/y+ util2.center 70) "Contents listed in box" :align :center)
		(uml-package (point/x+ util2.center 160) :util :width 130 :height 100 :id :util3
					 :contents ((uml-class '(65 40) "Date")))
		(text (point/y+ util3.center 70) "Contents diagramed in box" :align :center)
		(uml-package (point/y+ util1.center 180) "java::util" :width 130 :height 100 :id :util4
					 :contents ((uml-class '(65 40) "Date")))
		(text (point/y+ util4.center 70) "Fully qualified package name" :align :center)
		(uml-package (point/xy+ util4.center 170 -15)
			:java :width 170 :height 130 :id :util5
			:contents ((uml-package (point/y+ util5.center 10)
							:util :width 120 :height 90 :id :util6
							:contents ((uml-class '(55 40) "Date")))))
		(text (point/y+ util5.center 85) "Nested packages" :align :center)
		(uml-class (point/xy+ util5.center 160 45) "java::util::Date" :id :cls7)
		(text (point/y+ cls7.center 40) "Fully qualified class name" :align :center))))
